<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>微机原理lab整理</title>
      <link href="/2025/02/28/%E5%BE%AE%E6%9C%BA%E5%8E%9F%E7%90%86lab%E6%95%B4%E7%90%86/"/>
      <url>/2025/02/28/%E5%BE%AE%E6%9C%BA%E5%8E%9F%E7%90%86lab%E6%95%B4%E7%90%86/</url>
      
        <content type="html"><![CDATA[<h2 id="lab0-熟悉开发环境-点亮led-难度：0-5">Lab0:熟悉开发环境:点亮LED(难度：0/5)</h2><p>实验内容过于简单，仅附上代码:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">ORG 0000H</span><br><span class="line"></span><br><span class="line">MOV P2,#OFEH</span><br><span class="line">SJMP $</span><br><span class="line">END</span><br></pre></td></tr></table></figure><h2 id="lab1-数码管循环显示-难度：1-5">Lab1:数码管循环显示(难度：1/5)</h2><h4 id="实验内容：">实验内容：</h4><ul><li>实现数码管从0.0到9.9的循环，动态显示驱动双数码管，利用延时程序和段选信号控制双数码管显示的位</li><li>Proteus器件选择:AT89C51、7SEG-MPX2-CC、其他外围器件</li><li>选做内容根据光盘资料原理图，修改汇编代码，使其烧录后能在开发板上运行</li></ul><h4 id="实验代码：">实验代码：</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br></pre></td><td class="code"><pre><span class="line">ORG 000H</span><br><span class="line">A1 BIT P1.6;个位十位小数点</span><br><span class="line">A2 BIT P1.7</span><br><span class="line">A3 BIT P0.7</span><br><span class="line"></span><br><span class="line">A4 BIT P2.2;138译码器</span><br><span class="line">A5 BIT P2.3</span><br><span class="line">A6 BIT P2.4</span><br><span class="line"></span><br><span class="line">MOV R0,#0;个位十位清零</span><br><span class="line">MOV R1,#0</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">LOOP:</span><br><span class="line"></span><br><span class="line">CLR A4;CBA=110=6,打开LED7</span><br><span class="line">SETB A5</span><br><span class="line">SETB A6</span><br><span class="line"></span><br><span class="line">SETB A2</span><br><span class="line">CLR A1</span><br><span class="line">MOV DPTR,#TAB</span><br><span class="line">MOV A,R0</span><br><span class="line">MOVC A,@A+DPTR</span><br><span class="line">MOV P0,A</span><br><span class="line">LCALL DELAY</span><br><span class="line"></span><br><span class="line">SETB A4;CBA=111=7,打开LED8</span><br><span class="line">SETB A5</span><br><span class="line">SETB A6</span><br><span class="line"></span><br><span class="line">SETB A1</span><br><span class="line">CLR A2</span><br><span class="line">MOV DPTR,#TAB</span><br><span class="line">MOV A,R1</span><br><span class="line">MOVC A,@A+DPTR</span><br><span class="line">MOV P0,A</span><br><span class="line">SETB A3</span><br><span class="line">LCALL DELAY</span><br><span class="line"></span><br><span class="line">CLR A4;重复代码，使数码管亮光更稳定</span><br><span class="line">SETB A5</span><br><span class="line">SETB A6</span><br><span class="line"></span><br><span class="line">SETB A2</span><br><span class="line">CLR A1</span><br><span class="line">MOV DPTR,#TAB</span><br><span class="line">MOV A,R0</span><br><span class="line">MOVC A,@A+DPTR</span><br><span class="line">MOV P0,A</span><br><span class="line">LCALL DELAY</span><br><span class="line"></span><br><span class="line">SETB A4</span><br><span class="line">SETB A5</span><br><span class="line">SETB A6</span><br><span class="line"></span><br><span class="line">SETB A1</span><br><span class="line">CLR A2</span><br><span class="line">MOV DPTR,#TAB</span><br><span class="line">MOV A,R1</span><br><span class="line">MOVC A,@A+DPTR</span><br><span class="line">MOV P0,A</span><br><span class="line">SETB A3</span><br><span class="line">LCALL DELAY</span><br><span class="line"></span><br><span class="line">INC R0  ;进位</span><br><span class="line">CJNE R0,#10,LOOP1</span><br><span class="line">INC R1</span><br><span class="line">MOV R0,#0</span><br><span class="line">CJNE R1,#10,LOOP1</span><br><span class="line">MOV R1,#0</span><br><span class="line"></span><br><span class="line">LOOP1:</span><br><span class="line">AJMP LOOP </span><br><span class="line"></span><br><span class="line">DELAY:  ;延时程序</span><br><span class="line">MOV R5,#1</span><br><span class="line">DLY3:</span><br><span class="line">MOV R6,#070H</span><br><span class="line">DLY2:</span><br><span class="line">MOV R7,#0FFH</span><br><span class="line">DLY1:</span><br><span class="line">DJNZ R7,DLY1</span><br><span class="line">DJNZ R6,DLY2</span><br><span class="line">DJNZ R5,DLY3</span><br><span class="line">RET</span><br><span class="line"></span><br><span class="line">TAB:    ;数码管段选码（共阴极管）</span><br><span class="line">    DB 3FH,06H,5BH,4FH,66H,6DH,7DH,07H,7FH,6FH</span><br><span class="line"></span><br><span class="line">END</span><br></pre></td></tr></table></figure><h4 id="选做内容">选做内容</h4><ul><li>参考开发管原理图，LED1-8由138译码器间接控制，因此引入P22-24对应A4-A7三个引脚，通过给三个引脚赋值来同步操控点亮个位/十位的对应数码管。<strong>软硬结合</strong>的思路非常有趣。<br><img src="https://gitee.com/wwwwwwangzx/figurebed/raw/master/img/20250312200358.png" alt=""></li></ul>]]></content>
      
      
      
        <tags>
            
            <tag> 微机原理 </tag>
            
            <tag> MCS-51单片机 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>数据结构lab整理</title>
      <link href="/2025/02/28/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84lab%E6%95%B4%E7%90%86/"/>
      <url>/2025/02/28/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84lab%E6%95%B4%E7%90%86/</url>
      
        <content type="html"><![CDATA[<h2 id="lab1-复数的四则运算">lab1:复数的四则运算</h2><p>配环境花了不少时间，代码还是很简单的,附上关键内容</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 计算两个复数的和</span></span><br><span class="line"><span class="type">int</span> <span class="title function_">AddComplex</span><span class="params">(Complex sCpx1, Complex sCpx2, Complex* psSum)</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (psSum == <span class="literal">NULL</span>)</span><br><span class="line"><span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line">psSum-&gt;fReal = sCpx1.fReal + sCpx2.fReal;</span><br><span class="line">psSum-&gt;fImage = sCpx1.fImage + sCpx2.fImage;</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 计算两个复数的差</span></span><br><span class="line"><span class="type">int</span> <span class="title function_">SubComplex</span><span class="params">(Complex sCpx1, Complex sCpx2, Complex* psDiff)</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (psDiff == <span class="literal">NULL</span>)</span><br><span class="line"><span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line">psDiff-&gt;fReal = sCpx1.fReal - sCpx2.fReal;</span><br><span class="line">psDiff-&gt;fImage = sCpx1.fImage - sCpx2.fImage;</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 计算两个复数的积</span></span><br><span class="line"><span class="type">int</span> <span class="title function_">MulComplex</span><span class="params">(Complex sCpx1, Complex sCpx2, Complex* psProd)</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (psProd == <span class="literal">NULL</span>)</span><br><span class="line"><span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line">psProd-&gt;fReal = sCpx1.fReal * sCpx2.fReal - sCpx1.fImage * sCpx2.fImage;</span><br><span class="line">psProd-&gt;fImage = sCpx1.fReal * sCpx2.fImage + sCpx1.fImage * sCpx2.fReal;</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 计算两个复数的商</span></span><br><span class="line"><span class="type">int</span> <span class="title function_">DivComplex</span><span class="params">(Complex sCpx1, Complex sCpx2, Complex* psQuot)</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (psQuot == <span class="literal">NULL</span> || (sCpx2.fReal == <span class="number">0</span> &amp;&amp; sCpx2.fImage == <span class="number">0</span>))</span><br><span class="line"><span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line"><span class="type">float</span> denominator = sCpx2.fReal * sCpx2.fReal + sCpx2.fImage * sCpx2.fImage;</span><br><span class="line">psQuot-&gt;fReal = (sCpx1.fReal * sCpx2.fReal + sCpx1.fImage * sCpx2.fImage) / denominator;</span><br><span class="line">psQuot-&gt;fImage = (sCpx1.fImage * sCpx2.fReal - sCpx1.fReal * sCpx2.fImage) / denominator;</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="lab2：一元二次多项式的加减运算-线性表">lab2：一元二次多项式的加减运算(线性表)</h2><p>。。。施工中</p>]]></content>
      
      
      <categories>
          
          <category> 笔记 </category>
          
          <category> 数据结构 </category>
          
          <category> C </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 数据结构 </tag>
            
            <tag> C </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>shell学习笔记</title>
      <link href="/2025/02/27/shell%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
      <url>/2025/02/27/shell%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/</url>
      
        <content type="html"><![CDATA[<h2 id="the-basic-princple-of-shell">The basic princple of shell</h2><ul><li><p><code>Prompt</code>(命令提示符) 最重要的信息就是工作路径，shell此时所处的“位置”，一定要时时刻刻知道自己“在哪里”  具体操作为  <strong>rm 或 -rf 或 ./</strong>*</p></li><li><p><code>pwd</code>(print working directory)</p></li><li><p><code>cd path</code>(change directory), 其中~代表home, .代表当前路径, …代表上一级路径</p></li><li><p><code>ls -a</code> 列出所有文件和目录，包括隐藏文件</p></li><li><p><code>ls -l</code> 列出详细信息（文件权限，大小，修改时间等）</p></li><li><p><code>touch file</code> 创建一个文件</p></li><li><p><code>mkdir dir</code> 创建一个目录</p></li><li><p><code>cp src dst</code> 复制文件或目录 (-r 递归复制目录)</p></li><li><p><code>mv src dst1</code> 移动文件或目录(重命名)</p></li><li><p><code>rm files...</code> 删除文件 -r 递归删除目录 -f 强制删除</p></li><li><p><code>find path -name pattern</code> 在 path 下查找文件名匹配 pattern 的文件</p></li><li><p><code>cat files...</code> 输出与拼接文件 -n 带行号输出</p></li><li><p><code>head file</code> 输出 file 前10行 -n lines 输出lines行</p></li><li><p><code>tail file</code> 输出 file 后10行 -n lines 输出lines行</p></li><li><p><code>more/less file</code> 分页输出 file 内容 空格翻页，回车下一行，q 退出； less的功能更多 用法见 less -help</p></li><li><p><code>hexdump file</code> 以十六进制输出文件内容 -C 并排输出十六进制与ASCII -n N 输出前 N 个字节</p></li><li><p><code>man</code> 查看命令文档(manual)</p></li><li><p><code>echo</code> 输出字符串(常配合重定向 / 管道使用)</p></li><li><p><code>whoami</code> 获取当前用户</p></li><li><p><code>whereis</code> 查找命令所在位置</p></li><li><p><code>clear</code> 清屏</p></li><li><p><code>chmod</code> 更改文件权限</p></li><li><p><code>ps</code> 显示进程信息</p></li><li><p><code>date</code> 获取当前日期时间</p></li><li><p><code>kill</code> 杀死进程</p></li><li><p><code>grep</code> 搜索文件内容(常配合重定向 / 管道使用)</p></li><li><p><code>diff</code> 比较文件 / 目录内容</p></li><li><p><code>curl</code> 发送 HTTP 请求 wget 下载文件</p></li></ul>]]></content>
      
      
      <categories>
          
          <category> 笔记 </category>
          
          <category> shell </category>
          
      </categories>
      
      
        <tags>
            
            <tag> shell </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>微机原理</title>
      <link href="/2025/02/17/%E5%BE%AE%E6%9C%BA%E5%8E%9F%E7%90%86/"/>
      <url>/2025/02/17/%E5%BE%AE%E6%9C%BA%E5%8E%9F%E7%90%86/</url>
      
        <content type="html"><![CDATA[<h2 id="charpter-1-微型机">Charpter 1: 微型机</h2><ul><li><p><strong>微型机</strong>:由CPU,三条总线,存储器,I/O接口组成</p></li><li><p><strong>CPU</strong>:由运算器(ALU)和控制器(CU)组成</p></li><li><p><strong>总线</strong>:数据总线(DB),地址总线(AB),控制总线(CB)，其中数据总线是双向的，地址总线为单向，由CPU发出，控制总线通常也为单向，方向一般是固定的</p></li></ul><p><img src="https://gitee.com/wwwwwwangzx/figurebed/raw/master/img/%E5%BE%AE%E4%BF%A1%E5%9B%BE%E7%89%87_20250228175251.png" alt=""></p><p><img src="https://gitee.com/wwwwwwangzx/figurebed/raw/master/img/%E5%BE%AE%E4%BF%A1%E5%9B%BE%E7%89%87_20250228175256.png" alt=""></p><p><img src="https://gitee.com/wwwwwwangzx/figurebed/raw/master/img/%E5%BE%AE%E4%BF%A1%E5%9B%BE%E7%89%87_20250228175300.png" alt=""></p><h2 id="charpter-2-msc-51单片机硬件结构">Charpter 2: MSC-51单片机硬件结构</h2><h3 id="mcs-51主要功能特点">MCS-51主要功能特点:</h3><ul><li>8位CPU</li><li>片内 4KB ROM</li><li>片内 128B RAM</li><li>4个8位I/O口 (P0,P1,P2,P3)</li><li>特殊功能寄存器(SFR)</li><li>2个优先级的5个中断源结构</li><li>1个全双工串行通信口</li><li>2个16位定时/计数器</li><li>布尔处理器</li><li>64KB 外部数据存储器地址空间</li><li>64KB 外部程序存储器地址空间</li><li>片内振荡器及时钟电路</li></ul><h3 id="mcs-51的引脚配置-以proteus中的at89c51为例">MCS-51的引脚配置(以proteus中的AT89C51为例)</h3><p><img src="https://gitee.com/wwwwwwangzx/figurebed/raw/master/img/%E5%BE%AE%E4%BF%A1%E5%9B%BE%E7%89%87_20250228181355.png" alt=""></p><ul><li>$ P0~P3: 4个8位I/O口 $</li><li>$ RST: 复位引脚      $</li><li>$ VCC,GND: 电源,接地 $</li><li>$ XTAL1,XTAL2: 晶振引脚 $</li><li>$ \overline{PSEN} : 外部程序存储器选通引脚 $</li><li>$ ALE/PROG: 地址锁存使能引脚 $</li><li>$ \overline{EA} : 外部程序存储器访问控制引脚 $</li></ul><p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mover accent="true"><mrow><mi>P</mi><mi>S</mi><mi>E</mi><mi>N</mi></mrow><mo stretchy="true">‾</mo></mover><mtext>为低电平时，读取片外内存</mtext></mrow><annotation encoding="application/x-tex">\overline{PSEN} 为低电平时 ，读取片外内存</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8833300000000001em;vertical-align:0em;"></span><span class="mord overline"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8833300000000001em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">P</span><span class="mord mathdefault" style="margin-right:0.05764em;">S</span><span class="mord mathdefault" style="margin-right:0.05764em;">E</span><span class="mord mathdefault" style="margin-right:0.10903em;">N</span></span></span><span style="top:-3.80333em;"><span class="pstrut" style="height:3em;"></span><span class="overline-line" style="border-bottom-width:0.04em;"></span></span></span></span></span></span><span class="mord cjk_fallback">为</span><span class="mord cjk_fallback">低</span><span class="mord cjk_fallback">电</span><span class="mord cjk_fallback">平</span><span class="mord cjk_fallback">时</span><span class="mord cjk_fallback">，</span><span class="mord cjk_fallback">读</span><span class="mord cjk_fallback">取</span><span class="mord cjk_fallback">片</span><span class="mord cjk_fallback">外</span><span class="mord cjk_fallback">内</span><span class="mord cjk_fallback">存</span></span></span></span><br>$ \overline{EA} 直接访问外部ROM；高电平时地址小于4KB时访问内部程序存储器，大于的部分才访问外部ROM$</p><h3 id="i-o口">I/O口</h3>]]></content>
      
      
      
        <tags>
            
            <tag> 微机原理 </tag>
            
            <tag> MCS-51单片机 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>scipy matplotlib学习笔记</title>
      <link href="/2024/11/28/scipy-matplotlib%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
      <url>/2024/11/28/scipy-matplotlib%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/</url>
      
        <content type="html"><![CDATA[<h2 id="前言：探索matplotlib的世界">前言：探索matplotlib的世界</h2><p>lz作为一个几乎没有py基础的萌新，对py各种强大的开源库早有耳闻，借着这次机会，希望能通过学习matplotlib来打开python的世界的大门。（不是第一次打开了）））</p><p>matplotlib是python中一个著名的绘图库，它提供了一系列的绘图函数，可以用来绘制各种图形，包括散点图，折线图，柱状图，饼图，等等。</p><p>下载matplotlib的方法也很简单，Windows系统已经安装好了Python代码运行所需的环境，直接在命令行输入这一行代码即可，安装成功后，我们就可以开始绘图了。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip install matplotlib</span><br></pre></td></tr></table></figure><p>本文主要介绍了matplotlib的一些基本用法，包括绘制简单的散点图，分析趋势，拟合曲线等功能。（更强悍的功能有待挖掘，并不是库不够强大，只是lz水平有限+已经足够课程要求，只能说是入门级的学习笔记）</p><p>附上matplotlib官网：<a href="https://matplotlib.org">https://matplotlib.org</a>，里面有丰富的教程和示例，强烈建议读者多多参考（能不能看懂又是另一回事）））。</p><h2 id="绘制散点图">绘制散点图</h2><p>matplotlib中最简单的绘图方式就是绘制散点图，这里以code coploit给我生成的两组数据为例） 代码如下：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> matplotlib.pyplot <span class="keyword">as</span> plt</span><br><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"></span><br><span class="line"><span class="comment"># 绘制数据</span></span><br><span class="line">x = np.array([<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>, <span class="number">7</span>, <span class="number">8</span>, <span class="number">9</span>, <span class="number">10</span>])</span><br><span class="line">y1 = np.array([<span class="number">1.5</span>, <span class="number">2.5</span>, <span class="number">3.5</span>, <span class="number">4.5</span>, <span class="number">5.5</span>, <span class="number">6.5</span>, <span class="number">7.5</span>, <span class="number">8.5</span>, <span class="number">9.5</span>, <span class="number">10.5</span>])</span><br><span class="line">y2 = np.array([<span class="number">1.2</span>, <span class="number">2.2</span>, <span class="number">3.2</span>, <span class="number">4.2</span>, <span class="number">5.2</span>, <span class="number">6.2</span>, <span class="number">7.2</span>, <span class="number">8.2</span>, <span class="number">9.2</span>, <span class="number">10.2</span>])</span><br><span class="line"></span><br><span class="line"><span class="comment"># 绘制散点图</span></span><br><span class="line">plt.scatter(x, y1, label=<span class="string">&#x27;Group 1&#x27;</span>)     <span class="comment"># Group 1为图像的名称，Group 2同理</span></span><br><span class="line">plt.scatter(x, y2, label=<span class="string">&#x27;Group 2&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 设置图例</span></span><br><span class="line">plt.legend()</span><br><span class="line"></span><br><span class="line"><span class="comment"># 设置标题和轴标签</span></span><br><span class="line">plt.title(<span class="string">&#x27;Example of Scatter Plot&#x27;</span>)        <span class="comment"># 标题</span></span><br><span class="line">plt.xlabel(<span class="string">&#x27;X-axis&#x27;</span>)                      <span class="comment"># x轴标签</span></span><br><span class="line">plt.ylabel(<span class="string">&#x27;Y-axis&#x27;</span>)                      <span class="comment"># y轴标签</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 显示图形</span></span><br><span class="line">plt.show()</span><br></pre></td></tr></table></figure><p>可以复制代码查看运行结果，运行结果如下：<br><img src="https://gitee.com/wwwwwwangzx/figurebed/raw/master/img/20241128201328.png"></p><p>可以看到，matplotlib绘制的散点图非常直观，请读者对照着代码尝试理解。</p><p>下面提供几种常见的函数：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 设置图例的位置，&#x27;upper left&#x27;表示左上角</span></span><br><span class="line">plt.legend([<span class="string">&#x27;Group 1&#x27;</span>, <span class="string">&#x27;Group 2&#x27;</span>], loc=<span class="string">&#x27;upper left&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 设置坐标轴范围</span></span><br><span class="line">plt.xlim(<span class="number">0</span>, <span class="number">10</span>)</span><br><span class="line">plt.ylim(<span class="number">0</span>, <span class="number">11</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 设置x轴刻度</span></span><br><span class="line">plt.xticks([<span class="number">1</span>, <span class="number">3</span>, <span class="number">5</span>, <span class="number">7</span>, <span class="number">9</span>])   </span><br><span class="line"><span class="comment"># 或者如下，2为步进值</span></span><br><span class="line">plt.xticks(np.arange(<span class="number">1</span>, <span class="number">11</span>, <span class="number">2</span>))</span><br><span class="line"></span><br><span class="line"><span class="comment"># 设置点的颜色</span></span><br><span class="line">plt.scatter(x, y1, c=<span class="string">&#x27;r&#x27;</span>, label=<span class="string">&#x27;Group 1&#x27;</span>)</span><br><span class="line"><span class="comment"># &#x27;r&#x27;表示红色，其他颜色代码请参考matplotlib官网,&#x27;Group 1&#x27;为图像的名称</span></span><br></pre></td></tr></table></figure><p>至此掌握这几种函数我们已经能绘制一些简单的散点图了，气泡图，三维图，热力图等功能请自行查找相关资料。</p><h2 id="使用散点图拟合曲线">使用散点图拟合曲线</h2><p>matplotlib中有很多函数可以用来拟合曲线，这里以拟合一条直线函数为例，代码如下：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"><span class="keyword">import</span> matplotlib.pyplot <span class="keyword">as</span> plt</span><br><span class="line"><span class="keyword">from</span> scipy.stats <span class="keyword">import</span> pearsonr    <span class="comment"># 计算相关系数 引入pearsonr函数</span></span><br><span class="line"></span><br><span class="line">x = [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">1.5</span>, <span class="number">4</span>, <span class="number">2.5</span>, <span class="number">6</span>, <span class="number">4</span>, <span class="number">3</span>, <span class="number">5.5</span>, <span class="number">5</span>, <span class="number">2</span>]</span><br><span class="line">y = [<span class="number">3</span>, <span class="number">4</span>, <span class="number">8</span>, <span class="number">4.5</span>, <span class="number">10</span>, <span class="number">5</span>, <span class="number">15</span>, <span class="number">9</span>, <span class="number">5</span>, <span class="number">16</span>, <span class="number">13</span>, <span class="number">3</span>]</span><br><span class="line"></span><br><span class="line">plt.scatter(x, y, color=<span class="string">&quot;red&quot;</span>)</span><br><span class="line">plt.title(<span class="string">&quot;Scatter Plot of the data&quot;</span>)</span><br><span class="line">plt.xlabel(<span class="string">&quot;X&quot;</span>)</span><br><span class="line">plt.ylabel(<span class="string">&quot;Y&quot;</span>)</span><br><span class="line"></span><br><span class="line">linear_model = np.polyfit(x, y, <span class="number">1</span>)     <span class="comment"># 拟合一条直线</span></span><br><span class="line">linear_model_fn = np.poly1d(linear_model)    <span class="comment"># 得到拟合函数</span></span><br><span class="line">x_s = np.arange(<span class="number">0</span>, <span class="number">7</span>)     <span class="comment"># 定义x轴范围</span></span><br><span class="line">plt.plot(x_s, linear_model_fn(x_s), color=<span class="string">&quot;green&quot;</span>)     <span class="comment"># 绘制拟合曲线</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 计算相关系数</span></span><br><span class="line">corr, _ = pearsonr(x, y)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;相关系数：&quot;</span>, corr)</span><br><span class="line"><span class="comment"># 相关系数r</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 计算拟合曲线与原始数据的误差</span></span><br><span class="line">y_pred = linear_model_fn(x)</span><br><span class="line">mse = np.mean((y_pred - y) ** <span class="number">2</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;MSE：&quot;</span>, mse)   </span><br><span class="line"><span class="comment"># 均方误差</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 计算拟合曲线的拟合程度</span></span><br><span class="line">r_squared = <span class="number">1</span> - (mse / np.var(y))</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;拟合程度：&quot;</span>, r_squared)</span><br><span class="line"><span class="comment"># 拟合程度r^2</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 得到拟合曲线的截距和斜率</span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;截距：&quot;</span>, linear_model[<span class="number">1</span>])</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;斜率：&quot;</span>, linear_model[<span class="number">0</span>])</span><br><span class="line"></span><br><span class="line">plt.show()</span><br></pre></td></tr></table></figure><p>运行代码结果如下：</p><p><img src="https://gitee.com/wwwwwwangzx/figurebed/raw/master/img/Figure.png" alt=""><br>保存之后运行代码，可以看到相关系数，MSE，拟合程度，截距，斜率等信息<br><img src="https://gitee.com/wwwwwwangzx/figurebed/raw/master/img/c9d3e8cc560037c6b149743080da290.png" alt=""><br>（Python运行结果的很多信息都需要自己用print打印出来，并不代表他没有求）。<br>matplotlib已经帮我们找到一条一次函数拟合曲线，这条曲线与原始数据有着很强的相关性，想拟合更高阶的曲线，例如二次函数，把degree参数改成2即可。</p><p>tips:<br>想绘制折线图可以加上以下代码：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">plt.plot(x, y,<span class="string">&#x27;b-&#x27;</span>, color=<span class="string">&quot;blue&quot;</span>) <span class="comment"># &#x27;b-&#x27;表示为蓝色的折线，其他用法请参考matplotlib官网，请注意折线连接方式，为了确保折线方向一致，请将x轴数据从小到大排列</span></span><br></pre></td></tr></table></figure><p>12.5更新:坐标值需要无穷时，可用<code>float('inf')</code>代替（实际上如果不知道的话，可以像我一样用coploit让他自己生成出来）））<br>至此先停笔，有新的需求时会再补充。</p><hr>]]></content>
      
      
      <categories>
          
          <category> 笔记 </category>
          
          <category> Python </category>
          
          <category> Scipy </category>
          
          <category> Matplotlib </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python </tag>
            
            <tag> Scipy </tag>
            
            <tag> Matplotlib </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>abc</title>
      <link href="/2024/11/27/abc/"/>
      <url>/2024/11/27/abc/</url>
      
        <content type="html"><![CDATA[<p><img src="https://gitee.com/wwwwwwangzx/figurebed/raw/master/img/wallhavenm3rm5k.jpg" alt=""><br><img src="https://gitee.com/wwwwwwangzx/figurebed/raw/master/img/btr.png" alt=""></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>基于hexo和github搭建个人博客教程</title>
      <link href="/2024/11/26/%E5%8D%9A%E5%AE%A2%E6%95%99%E7%A8%8B/"/>
      <url>/2024/11/26/%E5%8D%9A%E5%AE%A2%E6%95%99%E7%A8%8B/</url>
      
        <content type="html"><![CDATA[<h3 id="准备工作">准备工作</h3><p><strong>tips: 建议掌握科学上网，否则git安装包可能就要下一天））</strong></p><ol><li><p>安装<a href="https://git-scm.com/downloads">git</a>，我选用的是windows，64位版本，git version 2.47.0.windows.2</p></li><li><p>安装<a href="https://nodejs.org/zh-cn/download/">node.js</a>，我选用的是22.11.0版本（请不要使用23.3.0版本，亲测存在bug，详情自行查找github上相关内容）(Node.js安装包包含npm，无需单独安装)<br>安装完成之后在桌面右键打开git bash，输入以下命令：（出现版本号则说明安装成功）</p></li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">npm -v</span><br><span class="line">node -v</span><br><span class="line">git -v</span><br></pre></td></tr></table></figure><ol start="3"><li>安装hexo</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-cli -g</span><br></pre></td></tr></table></figure><ol start="4"><li>通过git bash命令行选择一个合适的目录创建一个新的hexo博客文件夹，例如hexo blog，并进入该目录</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">mkdir</span> hexo blog</span><br><span class="line"><span class="built_in">cd</span> hexo blog</span><br></pre></td></tr></table></figure><ol start="5"><li>初始化hexo博客并安装组件</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">hexo init</span><br><span class="line">npm install</span><br></pre></td></tr></table></figure><ol start="6"><li><p>登录/注册github账号</p></li><li><p>在桌面右键打开git bash，输入以下命令，设置用户名和邮箱</p></li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git config --global user.name <span class="string">&quot;github 用户名&quot;</span></span><br><span class="line">git config --global user.email <span class="string">&quot;github 邮箱&quot;</span></span><br></pre></td></tr></table></figure><ol start="8"><li>创建SSH Key并添加到github</li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh-keygen -t rsa -C &quot;github 邮箱&quot;</span><br></pre></td></tr></table></figure><ol start="9"><li><p>打开C:\Users\你的用户名.ssh\，找到id_rsa.pub文件用记事本打开，复制里面的内容，登录github，点击左上角头像，选择 <code>setting</code>，选择<code>SSH and GPG keys</code>，点击<code>New SSH Key</code>，把复制的公钥粘贴到Key中，title随便起，点击<code>Add SSH Key</code>。</p></li><li><p>打开git bash,输入以下命令检查是否连接成功：<br>（出现<code>Hi yourusername! You've successfully authenticated, but GitHub does not provide shell access.</code>则说明连接成功）</p></li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh -T git@github.com</span><br></pre></td></tr></table></figure><ol start="11"><li><p>创建github pages仓库，选<code>New repository</code>,在<code>repository name</code>中输入<code>yourname.github.io</code>,选择<code>Public</code>，点击<code>Add a README file</code>，点击<code>Create repository</code>。</p></li><li><p>输入以下命令查看博客：</p></li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">hexo generate # 以后可简写为hexo g，生成静态文件</span><br><span class="line">hexo server # 以后可简写为hexo s，启动本地服务器</span><br></pre></td></tr></table></figure><ol start="13"><li><p>打开浏览器，输入<code>http://localhost:4000</code>，看到hexo默认的主题，说明博客搭建成功。ctrl+c关闭本地服务器。</p></li><li><p>打开博客文件夹，找到<code>_config.yml</code>文件，修改以下内容：</p></li></ol><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Site</span></span><br><span class="line"><span class="attr">title:</span> <span class="string">你的博客标题</span></span><br><span class="line"><span class="attr">subtitle:</span> <span class="string">你的博客副标题</span></span><br><span class="line"><span class="attr">description:</span> <span class="string">你的博客描述</span></span><br><span class="line"><span class="attr">author:</span> <span class="string">你的名字</span></span><br><span class="line"><span class="attr">language:</span> <span class="string">zh-Hans</span></span><br><span class="line"><span class="attr">timezone:</span> <span class="string">Asia/Shanghai</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># URL</span></span><br><span class="line"><span class="attr">url:</span> <span class="string">http://localhost:4000</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Deployment</span></span><br><span class="line"><span class="attr">deploy:</span></span><br><span class="line">  <span class="attr">type:</span> <span class="string">git</span></span><br><span class="line">  <span class="attr">repo:</span> <span class="string">https://github.com/yourname/yourname.github.io.git</span></span><br><span class="line">  <span class="attr">branch:</span> <span class="string">main</span> <span class="comment"># 此处部分教程为master，但2021之后github默认分支为main，请注意</span></span><br></pre></td></tr></table></figure><ol start="15"><li>保存并关闭文件，输入以下命令：</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-deployer-git --save <span class="comment"># 安装hexo-deployer-git插件,否则无法执行hexo d命令</span></span><br><span class="line">hexo clean <span class="comment"># 清除缓存</span></span><br><span class="line">hexo g <span class="comment"># 生成静态文件</span></span><br><span class="line">hexo d <span class="comment"># 部署博客到github pages</span></span><br><span class="line">hexo s <span class="comment"># 启动本地服务器</span></span><br></pre></td></tr></table></figure><ol start="16"><li>打开浏览器，输入<code>http://yourname.github.io</code>，看到你的博客，说明部署成功。tips:以后部署博客步骤一键四连即可，如果只是想预览博客直接<code>hexo s</code>也可以，别忘了上传。</li></ol><h3 id="安装配置butterfly主题">安装配置butterfly主题</h3><p>不详细展开 <strong>实际上这一步可能是最长的</strong>（（（</p><p>请参照官方文档<a href="https://jerryc.me/posts/21cfbf15/">Butterfly主题文档</a>进行安装配置！功能很多，自行参考或寻找其他教程，butterfly主题还有很多魔改功能，可以自行探索。</p><p>最后重新部署网站就能看到butterfly主题的效果了。在实现相关功能之前请确保安装了所需的组件。</p><h3 id="安装配置picgo图床插件-可选">安装配置Picgo图床插件(可选)</h3><p>不做赘述，强烈建议搜索相关教程，简单易上手，推荐使用Gitee图床，免费且与github长相差不多，准确来说就是国内版。(这一步推荐配合本地相对路径一起食用，全部用图床的图片有可能会像我一样遇到Gitee/CDN给图片重定向的问题，导致无法正常显示)</p><h3 id="创建博客">创建博客</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo new post <span class="string">&quot;博客标题&quot;</span> <span class="comment"># hexo n</span></span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo cl &amp;&amp; hexo g &amp;&amp; hexo d &amp;&amp; hexo s <span class="comment"># 一键四连,更推荐自己写一个bat脚本来实现,效率高嘛</span></span><br></pre></td></tr></table></figure><h3 id="还有话要说">还有话要说</h3><p>本教程只是简单的介绍了一下创建教程，本人搭建期间也遇到了很多问题，但最终都自行查找解决，希望能帮助到大家。</p><p>找不到解决方案或者希望能有更深入的理解可以和<a href="https://chatgpt.com/">ChatGPT</a>讨论，可以锻炼自己提问的能力和debug的能力（bushi）</p><p>建议至少掌握一点markdown的语法，对开发者工具有一些了解，能读懂一点HTML，CSS代码，这些技能树（技能苗？）可以有效的帮助你解决出现的bug，甚至可以自己尝试魔改主题文件)</p><p>最后祝你使用愉快！</p><blockquote><p><font color=#FFC125 size=4>特别鸣谢：</font><br>  感谢<a href="https://theuho.site">theuho</a>大佬（），帮助我解决了几个关键的bug</p></blockquote>]]></content>
      
      
      
        <tags>
            
            <tag> github </tag>
            
            <tag> hexo </tag>
            
            <tag> butterfly </tag>
            
            <tag> Picgo </tag>
            
            <tag> blog </tag>
            
            <tag> 教程 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hello World！第一篇博客</title>
      <link href="/2024/11/26/hello-world/"/>
      <url>/2024/11/26/hello-world/</url>
      
        <content type="html"><![CDATA[<h3 id="2024-11-26本网站的第一篇博客-欢迎大家来到这里-特此纪念">2024/11/26本网站的第一篇博客，欢迎大家来到这里！特此纪念！</h3>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
